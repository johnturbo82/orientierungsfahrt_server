import os
import base64

from scour import scour

ASSETS_DIR = os.path.join(os.path.dirname(__file__), '..', 'assets', 'symbols')
OUTPUT_FILE = os.path.join(os.path.dirname(__file__), '..', 'images.py')

def encode_images_to_base64(directory):
    images = {}
    for filename in os.listdir(directory):
        path = os.path.join(directory, filename)
        key = os.path.splitext(filename)[0]
        if filename.lower().startswith('saveas') or filename.lower().startswith('template'):
            continue
        if filename.lower().endswith('.svg'):
            with open(path, "r", encoding="utf-8") as svg_file:
                svg_content = svg_file.read()
                minimized = scour.scourString(svg_content)
                b64_string = base64.b64encode(minimized.encode('utf-8')).decode('utf-8')
                images[key] = b64_string
    return images

def write_images_py(images, output_file):
    with open(output_file, "w") as f:
        f.write("# Auto-generated by scripts/image2base64.py\n")
        f.write("images = {\n")
        for name, b64 in images.items():
            f.write(f"    {repr(name)}: {repr(b64)},\n")
        f.write("}\n")

if __name__ == "__main__":
    images = encode_images_to_base64(ASSETS_DIR)
    write_images_py(images, OUTPUT_FILE)
